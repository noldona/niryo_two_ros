<launch>
	<!-- set to true if you want to launch ROS on your computer
		- controller will just echo position command
		- all hardware relative stuff is deactivated -->
	<arg name="simulation_mode" default="false" />
	<!-- set to true to disable hardware communication for CAN bus (Niryo Steppers)
	 or DXl bus (DEBUG PURPOSES) -->
	<arg name="disable_can_for_debug" default="false" />
	<arg name="disable_dxl_for_debug" default="false" />

	<node name="niryo_one_driver" pkg="niryo_one_driver" exec="niryo_one_driver" output="screen">

		<param from="$(find niryo_one_bringup)/config/niryo_one_driver.yaml" />

		<param name="fake_communication" value="$(arg simulation_mode)" />

		<param name="can_enabled" value="true" unless="$(arg disable_can_for_debug)" />
		<param name="can_enabled" value="false" if="$(arg disable_can_for_debug)" />
		<param name="dxl_enabled" value="true" unless="$(arg disable_dxl_for_debug)" />
		<param name="dxl_enabled" value="false" if="$(arg disable_dxl_for_debug)" />
	</node>

	<!-- <node name="niryo_one_tools" pkg="niryo_one_tools" exec="tool_controller.py" output="screen" respawn="false">
		<param from="$(find niryo_one_tools)/config/end_effectors.yaml" />
	</node> -->

	<!-- spawn controllers -->
	<node name="controller_spawner" pkg="controller_manager" exec="spawner" respawn="false" output="screen"
		args="joint_state_controller niryo_one_follow_joint_trajectory_controller
		--shutdown-timeout 1">
		<!-- Load controller settings -->
		<param from="$(find niryo_one_driver)/config/niryo_one_controllers.yaml" command="load"/>
	</node>

	<!-- robot state publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" exec="robot_state_publisher" output="screen" />
</launch>
